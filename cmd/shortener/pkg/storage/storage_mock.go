// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/nikishin42/shortener/cmd/shortener/pkg/storage (interfaces: StorageI)

// Package storage is a generated GoMock package.
package storage

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockStorageI is a mock of StorageI interface.
type MockStorageI struct {
	ctrl     *gomock.Controller
	recorder *MockStorageIMockRecorder
}

// MockStorageIMockRecorder is the mock recorder for MockStorageI.
type MockStorageIMockRecorder struct {
	mock *MockStorageI
}

// NewMockStorageI creates a new mock instance.
func NewMockStorageI(ctrl *gomock.Controller) *MockStorageI {
	mock := &MockStorageI{ctrl: ctrl}
	mock.recorder = &MockStorageIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStorageI) EXPECT() *MockStorageIMockRecorder {
	return m.recorder
}

// GetFullURL mocks base method.
func (m *MockStorageI) GetFullURL(arg0 string) (string, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFullURL", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// GetFullURL indicates an expected call of GetFullURL.
func (mr *MockStorageIMockRecorder) GetFullURL(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFullURL", reflect.TypeOf((*MockStorageI)(nil).GetFullURL), arg0)
}

// GetID mocks base method.
func (m *MockStorageI) GetID(arg0 string) (string, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetID", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// GetID indicates an expected call of GetID.
func (mr *MockStorageIMockRecorder) GetID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetID", reflect.TypeOf((*MockStorageI)(nil).GetID), arg0)
}

// SetPair mocks base method.
func (m *MockStorageI) SetPair(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetPair", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetPair indicates an expected call of SetPair.
func (mr *MockStorageIMockRecorder) SetPair(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetPair", reflect.TypeOf((*MockStorageI)(nil).SetPair), arg0, arg1)
}
